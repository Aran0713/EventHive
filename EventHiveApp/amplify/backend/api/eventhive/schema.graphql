type Event
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  organization: String!
  userName: String!
  userId: String
  eventName: String!
  eventPrivacy: String!
  eventType: String
  smallDescription: String
  ageLimit: Int
  ticketInfo: String
  dateTime: [DateTime] @hasMany(fields: ["id"])
  location: [Location] @hasMany(fields: ["id"])
  description: [Description] @hasMany(fields: ["id"])
  contact: [Contact] @hasMany(fields: ["id"])
  specialAccommodation: [SpecialAccommodation] @hasMany(fields: ["id"])
  image1: String
  image2: String
  image3: String
}

type DateTime
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  date: AWSDate!
  startTime: String
  endTime: String
  userName: String!
  eventID: ID!
  event: Event @belongsTo(fields: ["id"])
}

type Location
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  country: String
  province: String
  city: String
  postalCode: String
  address: String
  longitude: String!
  latitude: String!
  userName: String!
  eventID: ID!
  event: Event @belongsTo(fields: ["id"])
}

type Description
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  aboutEvent: String
  schedule: String
  userName: String!
  eventID: ID!
  event: Event @belongsTo(fields: ["id"])
}

type Contact
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  phone: String
  email: String
  website: String
  ig: String
  twitter: String
  snapchat: String
  tiktok: String
  youtube: String
  userName: String!
  eventID: ID!
  event: Event @belongsTo(fields: ["id"])
}

type SpecialAccommodation
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "userName"
        operations: [create, delete, update, read]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  wheelchairAccessibility: String
  signLanguageInterpretation: String
  closedCaptioning: String
  assistiveListeningSystems: String
  brailleMaterials: String
  flexibleCommunicationOptions: String
  accessibleSeating: String
  serviceAnimalAccommodation: String
  sensoryAccommodations: String
  userName: String!
  eventID: ID!
  event: Event @belongsTo(fields: ["id"])
}
